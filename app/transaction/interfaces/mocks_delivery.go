// Code generated by MockGen. DO NOT EDIT.
// Source: delivery.go

// Package transactioninterfaces is a generated GoMock package.
package transactioninterfaces

import (
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockITransactionDelivery is a mock of ITransactionDelivery interface.
type MockITransactionDelivery struct {
	ctrl     *gomock.Controller
	recorder *MockITransactionDeliveryMockRecorder
}

// MockITransactionDeliveryMockRecorder is the mock recorder for MockITransactionDelivery.
type MockITransactionDeliveryMockRecorder struct {
	mock *MockITransactionDelivery
}

// NewMockITransactionDelivery creates a new mock instance.
func NewMockITransactionDelivery(ctrl *gomock.Controller) *MockITransactionDelivery {
	mock := &MockITransactionDelivery{ctrl: ctrl}
	mock.recorder = &MockITransactionDeliveryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockITransactionDelivery) EXPECT() *MockITransactionDeliveryMockRecorder {
	return m.recorder
}

// InputHandler mocks base method.
func (m *MockITransactionDelivery) InputHandler(arg0 http.ResponseWriter, arg1 *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "InputHandler", arg0, arg1)
}

// InputHandler indicates an expected call of InputHandler.
func (mr *MockITransactionDeliveryMockRecorder) InputHandler(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InputHandler", reflect.TypeOf((*MockITransactionDelivery)(nil).InputHandler), arg0, arg1)
}

// OutputHandler mocks base method.
func (m *MockITransactionDelivery) OutputHandler(arg0 http.ResponseWriter, arg1 *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "OutputHandler", arg0, arg1)
}

// OutputHandler indicates an expected call of OutputHandler.
func (mr *MockITransactionDeliveryMockRecorder) OutputHandler(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "OutputHandler", reflect.TypeOf((*MockITransactionDelivery)(nil).OutputHandler), arg0, arg1)
}
