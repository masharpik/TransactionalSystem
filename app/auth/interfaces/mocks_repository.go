// Code generated by MockGen. DO NOT EDIT.
// Source: repository.go

// Package authinterfaces is a generated GoMock package.
package authinterfaces

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	utils "github.com/masharpik/TransactionalSystem/app/auth/utils"
)

// MockIAuthRepository is a mock of IAuthRepository interface.
type MockIAuthRepository struct {
	ctrl     *gomock.Controller
	recorder *MockIAuthRepositoryMockRecorder
}

// MockIAuthRepositoryMockRecorder is the mock recorder for MockIAuthRepository.
type MockIAuthRepositoryMockRecorder struct {
	mock *MockIAuthRepository
}

// NewMockIAuthRepository creates a new mock instance.
func NewMockIAuthRepository(ctrl *gomock.Controller) *MockIAuthRepository {
	mock := &MockIAuthRepository{ctrl: ctrl}
	mock.recorder = &MockIAuthRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIAuthRepository) EXPECT() *MockIAuthRepositoryMockRecorder {
	return m.recorder
}

// CreateUser mocks base method.
func (m *MockIAuthRepository) CreateUser(arg0 utils.User) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateUser", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateUser indicates an expected call of CreateUser.
func (mr *MockIAuthRepositoryMockRecorder) CreateUser(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateUser", reflect.TypeOf((*MockIAuthRepository)(nil).CreateUser), arg0)
}

// MinusBalance mocks base method.
func (m *MockIAuthRepository) MinusBalance(arg0 string, arg1 float64) (float64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MinusBalance", arg0, arg1)
	ret0, _ := ret[0].(float64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// MinusBalance indicates an expected call of MinusBalance.
func (mr *MockIAuthRepositoryMockRecorder) MinusBalance(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MinusBalance", reflect.TypeOf((*MockIAuthRepository)(nil).MinusBalance), arg0, arg1)
}

// PlusBalance mocks base method.
func (m *MockIAuthRepository) PlusBalance(arg0 string, arg1 float64) (float64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PlusBalance", arg0, arg1)
	ret0, _ := ret[0].(float64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PlusBalance indicates an expected call of PlusBalance.
func (mr *MockIAuthRepositoryMockRecorder) PlusBalance(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PlusBalance", reflect.TypeOf((*MockIAuthRepository)(nil).PlusBalance), arg0, arg1)
}
